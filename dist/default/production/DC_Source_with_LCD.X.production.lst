

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 30 04:31:43 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F526
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     5                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	jmp_tab,global,class=ENTRY,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0xD,3
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F526 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  0021                     	;# 
    63  0025                     	;# 
    64  0026                     	;# 
    65  000A                     _ADRES	set	10
    66  0009                     _ADCON0bits	set	9
    67  0009                     _ADCON0	set	9
    68  0007                     _TRISC	set	7
    69  0006                     _TRISB	set	6
    70  0000                     _OPTION	set	0
    71  000B                     _CM2CON0	set	11
    72  0008                     _CM1CON0	set	8
    73  0006                     _PORTB	set	6
    74  0007                     _PORTC	set	7
    75                           
    76                           ; #config settings
    77  0000                     
    78                           	psect	cinit
    79  002                     start_initialization:	
    80  002                     __initialization:	
    81  002                     end_of_initialization:	
    82                           ;End of C runtime variable initialization code
    83                           
    84  002                     __end_of__initialization:	
    85  002  0064               	clrf	4
    86  003  04A3  0B64         	ljmp	_main	;jump to C main() function
    87                           
    88                           	psect	cstackBANK1
    89  030                     __pcstackBANK1:	
    90  030                     ?___awmod:	
    91  030                     ___awmod@divisor:	
    92                           ; 2 bytes @ 0x0
    93                           
    94                           
    95                           ; 2 bytes @ 0x0
    96  030                     	ds	2
    97  032                     ___awmod@dividend:	
    98                           
    99                           ; 2 bytes @ 0x2
   100  032                     	ds	3
   101  035                     _main$491:	
   102                           
   103                           ; 2 bytes @ 0x5
   104  035                     	ds	2
   105  037                     main@right:	
   106                           
   107                           ; 1 bytes @ 0x7
   108  037                     	ds	1
   109                           
   110                           	psect	cstackBANK0
   111  010                     __pcstackBANK0:	
   112  010                     ?_b_to_bcd:	
   113  010                     ??_b_to_bcd:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  010                     ?_main:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  010                     ?___wmul:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  010                     b_to_bcd@x:	
   123                           ; 2 bytes @ 0x0
   124                           
   125  010                     ___wmul@multiplier:	
   126                           ; 1 bytes @ 0x0
   127                           
   128                           
   129                           ; 2 bytes @ 0x0
   130  010                     	ds	2
   131  012                     ___wmul@multiplicand:	
   132                           
   133                           ; 2 bytes @ 0x2
   134  012                     	ds	2
   135  014                     ??___wmul:	
   136  014                     ___wmul@product:	
   137                           ; 1 bytes @ 0x4
   138                           
   139                           
   140                           ; 2 bytes @ 0x4
   141  014                     	ds	2
   142  016                     ?___awdiv:	
   143  016                     ___awdiv@divisor:	
   144                           ; 2 bytes @ 0x6
   145                           
   146                           
   147                           ; 2 bytes @ 0x6
   148  016                     	ds	2
   149  018                     ___awdiv@dividend:	
   150                           
   151                           ; 2 bytes @ 0x8
   152  018                     	ds	2
   153  01A                     ??___awdiv:	
   154  01A                     ___awdiv@counter:	
   155                           ; 1 bytes @ 0xA
   156                           
   157                           
   158                           ; 1 bytes @ 0xA
   159  01A                     	ds	1
   160  01B                     ___awdiv@sign:	
   161                           
   162                           ; 1 bytes @ 0xB
   163  01B                     	ds	1
   164  01C                     ___awdiv@quotient:	
   165                           
   166                           ; 2 bytes @ 0xC
   167  01C                     	ds	2
   168  01E                     ??___awmod:	
   169  01E                     ___awmod@counter:	
   170                           ; 1 bytes @ 0xE
   171                           
   172                           
   173                           ; 1 bytes @ 0xE
   174  01E                     	ds	1
   175  01F                     ___awmod@sign:	
   176                           
   177                           ; 1 bytes @ 0xF
   178  01F                     	ds	1
   179  020                     ??_main:	
   180                           
   181                           	psect	maintext
   182  164                     __pmaintext:	
   183                           ; 1 bytes @ 0x10
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 75 in file "main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  right           1    7[BANK1 ] unsigned char 
   194 ;;  left            1    0        unsigned char 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1   46[None  ] void 
   197 ;; Registers used:
   198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, pclath, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : B00/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   204 ;;      Params:         0       0       0       0       0
   205 ;;      Locals:         0       4       0       0       0
   206 ;;      Temps:          0       0       0       0       0
   207 ;;      Totals:         0       4       0       0       0
   208 ;;Total ram usage:        4 bytes
   209 ;; Hardware stack levels required when called:    1
   210 ;; This function calls:
   211 ;;		___awdiv
   212 ;;		___awmod
   213 ;;		___wmul
   214 ;;		_b_to_bcd
   215 ;; This function is called by:
   216 ;;		Startup code after reset
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           
   221                           ;psect for function _main
   222  164                     _main:	
   223  164                     l895:	
   224                           ;incstack = 0
   225                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+2+pclath+cstack]
   226                           
   227                           
   228                           ;main.c: 77:     CM1CON0 = 0b01000000;
   229  164  0C40               	movlw	64
   230  165  04A4               	bcf	4,5	;FSR5=0, select bank0
   231  166  04C4               	bcf	4,6	;FSR6=0, select bank0
   232  167  0028               	movwf	8	;volatile
   233                           
   234                           ;main.c: 78:     CM2CON0 = 0b01000000;
   235  168  0C40               	movlw	64
   236  169  002B               	movwf	11	;volatile
   237  16A                     l897:	
   238                           
   239                           ;main.c: 79:     OPTION = 0b11011111;
   240  16A  0CDF               	movlw	223
   241  16B  0002               	option
   242  16C                     l899:	
   243                           
   244                           ;main.c: 80:     TRISB = 0b11011111;
   245  16C  0CDF               	movlw	223
   246  16D  0006               	tris	6
   247  16E                     l901:	
   248                           
   249                           ;main.c: 81:     PORTB = 0;
   250  16E  0066               	clrf	6	;volatile
   251  16F                     l903:	
   252                           
   253                           ;main.c: 82:     TRISC = 0b00000000;
   254  16F  0C00               	movlw	0
   255  170  0007               	tris	7
   256  171                     l905:	
   257                           
   258                           ;main.c: 83:     PORTC = 0;
   259  171  0067               	clrf	7	;volatile
   260  172                     l907:	
   261                           
   262                           ;main.c: 84:     ADCON0 = 0b01111001;
   263  172  0C79               	movlw	121
   264  173  0029               	movwf	9	;volatile
   265  174                     l909:	
   266  174                     l911:	
   267  174                     l913:	
   268                           
   269                           ;main.c: 90:         ADCON0bits.GO = 1;
   270  174  04A4               	bcf	4,5	;FSR5=0, select bank0
   271  175  04C4               	bcf	4,6	;FSR6=0, select bank0
   272  176  0529               	bsf	9,1	;volatile
   273  177                     l915:	
   274                           ;main.c: 91:         while(ADCON0bits.GO == 1);
   275                           
   276  177  0629               	btfsc	9,1	;volatile
   277  178  0B7A               	goto	u491
   278  179  0B7B               	goto	u490
   279  17A                     u491:	
   280  17A  0B77               	goto	l915
   281  17B                     u490:	
   282  17B                     l917:	
   283                           
   284                           ;main.c: 92:         left = ADRES * 100 / 51 / 100;
   285  17B  0C33               	movlw	51
   286  17C  0036               	movwf	___awdiv@divisor
   287  17D  0C00               	movlw	0
   288  17E  0037               	movwf	___awdiv@divisor+1
   289  17F  020A               	movf	10,w	;volatile
   290  180  002D               	movwf	btemp
   291  181  006E               	clrf	btemp+1
   292  182  020D               	movf	wtemp0,w
   293  183  0030               	movwf	___wmul@multiplier
   294  184  020E               	movf	wtemp0+1,w
   295  185  0031               	movwf	___wmul@multiplier+1
   296  186  0C64               	movlw	100
   297  187  0032               	movwf	___wmul@multiplicand
   298  188  0C00               	movlw	0
   299  189  0033               	movwf	___wmul@multiplicand+1
   300  18A  04A3  0907  04A3   	fcall	entry____wmul
   301  18D  04A4               	bcf	4,5	;FSR5=0, select bank0
   302  18E  04C4               	bcf	4,6	;FSR6=0, select bank0
   303  18F  0211               	movf	?___wmul+1,w
   304  190  0039               	movwf	___awdiv@dividend+1
   305  191  0210               	movf	?___wmul,w
   306  192  0038               	movwf	___awdiv@dividend
   307  193  04A3  090B  04A3   	fcall	entry____awdiv
   308  196  04A4               	bcf	4,5	;FSR5=0, select bank0
   309  197  04C4               	bcf	4,6	;FSR6=0, select bank0
   310  198  0217               	movf	?___awdiv+1,w
   311  199  05A4               	bsf	4,5	;FSR5=1, select bank1
   312  19A  0036               	movwf	(_main$491+1)^(0+32)
   313  19B  04A4               	bcf	4,5	;FSR5=0, select bank0
   314  19C  0216               	movf	?___awdiv,w
   315  19D  05A4               	bsf	4,5	;FSR5=1, select bank1
   316  19E  0035               	movwf	_main$491^(0+32)
   317  19F  0C64               	movlw	100
   318  1A0  04A4               	bcf	4,5	;FSR5=0, select bank0
   319  1A1  0036               	movwf	___awdiv@divisor
   320  1A2  0C00               	movlw	0
   321  1A3  0037               	movwf	___awdiv@divisor+1
   322  1A4  05A4               	bsf	4,5	;FSR5=1, select bank1
   323  1A5  0216               	movf	(_main$491+1)^(0+32),w
   324  1A6  04A4               	bcf	4,5	;FSR5=0, select bank0
   325  1A7  0039               	movwf	___awdiv@dividend+1
   326  1A8  05A4               	bsf	4,5	;FSR5=1, select bank1
   327  1A9  0215               	movf	_main$491^(0+32),w
   328  1AA  04A4               	bcf	4,5	;FSR5=0, select bank0
   329  1AB  0038               	movwf	___awdiv@dividend
   330  1AC  04A3  090B  04A3   	fcall	entry____awdiv
   331                           
   332                           ;main.c: 93:         right = ADRES * 100 / 51 % 100;
   333  1AF  0C64               	movlw	100
   334  1B0  05A4               	bsf	4,5	;FSR5=1, select bank1
   335  1B1  04C4               	bcf	4,6	;FSR6=0, select bank1
   336  1B2  0030               	movwf	___awmod@divisor^(0+32)
   337  1B3  0C00               	movlw	0
   338  1B4  0031               	movwf	(___awmod@divisor^(0+32)+1)
   339  1B5  0C33               	movlw	51
   340  1B6  04A4               	bcf	4,5	;FSR5=0, select bank0
   341  1B7  0036               	movwf	___awdiv@divisor
   342  1B8  0C00               	movlw	0
   343  1B9  0037               	movwf	___awdiv@divisor+1
   344  1BA  020A               	movf	10,w	;volatile
   345  1BB  002D               	movwf	btemp
   346  1BC  006E               	clrf	btemp+1
   347  1BD  020D               	movf	wtemp0,w
   348  1BE  0030               	movwf	___wmul@multiplier
   349  1BF  020E               	movf	wtemp0+1,w
   350  1C0  0031               	movwf	___wmul@multiplier+1
   351  1C1  0C64               	movlw	100
   352  1C2  0032               	movwf	___wmul@multiplicand
   353  1C3  0C00               	movlw	0
   354  1C4  0033               	movwf	___wmul@multiplicand+1
   355  1C5  04A3  0907  04A3   	fcall	entry____wmul
   356  1C8  04A4               	bcf	4,5	;FSR5=0, select bank0
   357  1C9  04C4               	bcf	4,6	;FSR6=0, select bank0
   358  1CA  0211               	movf	?___wmul+1,w
   359  1CB  0039               	movwf	___awdiv@dividend+1
   360  1CC  0210               	movf	?___wmul,w
   361  1CD  0038               	movwf	___awdiv@dividend
   362  1CE  04A3  090B  04A3   	fcall	entry____awdiv
   363  1D1  04A4               	bcf	4,5	;FSR5=0, select bank0
   364  1D2  04C4               	bcf	4,6	;FSR6=0, select bank0
   365  1D3  0217               	movf	?___awdiv+1,w
   366  1D4  05A4               	bsf	4,5	;FSR5=1, select bank1
   367  1D5  0033               	movwf	(___awmod@dividend+1)^(0+32)
   368  1D6  04A4               	bcf	4,5	;FSR5=0, select bank0
   369  1D7  0216               	movf	?___awdiv,w
   370  1D8  05A4               	bsf	4,5	;FSR5=1, select bank1
   371  1D9  0032               	movwf	___awmod@dividend^(0+32)
   372  1DA  04A3  0909  04A3   	fcall	entry____awmod
   373  1DD  05A4               	bsf	4,5	;FSR5=1, select bank1
   374  1DE  04C4               	bcf	4,6	;FSR6=0, select bank1
   375  1DF  0210               	movf	?___awmod^(0+32),w
   376  1E0  002D               	movwf	wtemp0
   377  1E1  0211               	movf	(?___awmod+1)^(0+32),w
   378  1E2  002E               	movwf	wtemp0+1
   379  1E3  020D               	movf	wtemp0,w
   380  1E4  0037               	movwf	main@right^(0+32)
   381                           
   382                           ;main.c: 94:         b_to_bcd(right%10);
   383  1E5  0C0A               	movlw	10
   384  1E6  0030               	movwf	___awmod@divisor^(0+32)
   385  1E7  0C00               	movlw	0
   386  1E8  0031               	movwf	(___awmod@divisor^(0+32)+1)
   387  1E9  0217               	movf	main@right^(0+32),w
   388  1EA  002D               	movwf	btemp
   389  1EB  006E               	clrf	btemp+1
   390  1EC  020D               	movf	wtemp0,w
   391  1ED  0032               	movwf	___awmod@dividend^(0+32)
   392  1EE  020E               	movf	wtemp0+1,w
   393  1EF  0033               	movwf	(___awmod@dividend+1)^(0+32)
   394  1F0  04A3  0909  04A3   	fcall	entry____awmod
   395  1F3  05A4               	bsf	4,5	;FSR5=1, select bank1
   396  1F4  04C4               	bcf	4,6	;FSR6=0, select bank1
   397  1F5  0210               	movf	?___awmod^(0+32),w
   398  1F6  002D               	movwf	wtemp0
   399  1F7  0211               	movf	(?___awmod+1)^(0+32),w
   400  1F8  002E               	movwf	wtemp0+1
   401  1F9  020D               	movf	wtemp0,w
   402  1FA  04A3  0905  04A3   	fcall	entry__b_to_bcd
   403  1FD  0B74               	goto	l913
   404  1FE  04A3  0A00         	ljmp	start
   405  200                     __end_of_main:	
   406                           
   407                           	psect	text1
   408  029                     __ptext1:	
   409 ;; *************** function _b_to_bcd *****************
   410 ;; Defined at:
   411 ;;		line 22 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;  x               1    wreg     unsigned char 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  x               1    0[BANK0 ] unsigned char 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1   22[None  ] void 
   418 ;; Registers used:
   419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         1       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         1       0       0       0       0
   429 ;;Total ram usage:        1 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _b_to_bcd
   440  029                     _b_to_bcd:	
   441                           
   442                           ;b_to_bcd@x stored from wreg
   443  029  04A4               	bcf	4,5	;FSR5=0, select bank0
   444  02A  04C4               	bcf	4,6	;FSR6=0, select bank0
   445  02B  0030               	movwf	b_to_bcd@x
   446  02C                     l759:	
   447                           
   448                           ;main.c: 23:     switch(x) {
   449  02C  0A5C               	goto	l787
   450  02D                     l761:	
   451                           
   452                           ;main.c: 25:             PORTC = 0b00011111;
   453  02D  0C1F               	movlw	31
   454  02E  0027               	movwf	7	;volatile
   455                           
   456                           ;main.c: 26:             PORTB = 0b00100000;
   457  02F  0C20               	movlw	32
   458  030  0026               	movwf	6	;volatile
   459                           
   460                           ;main.c: 27:             break;
   461  031  0A84               	goto	l36
   462  032                     l763:	
   463                           
   464                           ;main.c: 29:             PORTC = 0b00000011;
   465  032  0C03               	movlw	3
   466  033  0027               	movwf	7	;volatile
   467  034                     l765:	
   468                           
   469                           ;main.c: 30:             PORTB = 0b00000000;
   470  034  0066               	clrf	6	;volatile
   471                           
   472                           ;main.c: 31:             break;
   473  035  0A84               	goto	l36
   474  036                     l767:	
   475                           
   476                           ;main.c: 33:             PORTC = 0b00101101;
   477  036  0C2D               	movlw	45
   478  037  0027               	movwf	7	;volatile
   479                           
   480                           ;main.c: 34:             PORTB = 0b00100000;
   481  038  0C20               	movlw	32
   482  039  0026               	movwf	6	;volatile
   483                           
   484                           ;main.c: 35:             break;
   485  03A  0A84               	goto	l36
   486  03B                     l769:	
   487                           
   488                           ;main.c: 37:             PORTC = 0b00100111;
   489  03B  0C27               	movlw	39
   490  03C  0027               	movwf	7	;volatile
   491                           
   492                           ;main.c: 38:             PORTB = 0b00100000;
   493  03D  0C20               	movlw	32
   494  03E  0026               	movwf	6	;volatile
   495                           
   496                           ;main.c: 39:             break;
   497  03F  0A84               	goto	l36
   498  040                     l771:	
   499                           
   500                           ;main.c: 41:             PORTC = 0b00110011;
   501  040  0C33               	movlw	51
   502  041  0027               	movwf	7	;volatile
   503  042  0A34               	goto	l765
   504  043                     l775:	
   505                           
   506                           ;main.c: 45:             PORTC = 0b00110110;
   507  043  0C36               	movlw	54
   508  044  0027               	movwf	7	;volatile
   509                           
   510                           ;main.c: 46:             PORTB = 0b00100000;
   511  045  0C20               	movlw	32
   512  046  0026               	movwf	6	;volatile
   513                           
   514                           ;main.c: 47:             break;
   515  047  0A84               	goto	l36
   516  048                     l777:	
   517                           
   518                           ;main.c: 49:             PORTC = 0b00111110;
   519  048  0C3E               	movlw	62
   520  049  0027               	movwf	7	;volatile
   521                           
   522                           ;main.c: 50:             PORTB = 0b00100000;
   523  04A  0C20               	movlw	32
   524  04B  0026               	movwf	6	;volatile
   525                           
   526                           ;main.c: 51:             break;
   527  04C  0A84               	goto	l36
   528  04D                     l779:	
   529                           
   530                           ;main.c: 53:             PORTC = 0b00000011;
   531  04D  0C03               	movlw	3
   532  04E  0027               	movwf	7	;volatile
   533                           
   534                           ;main.c: 54:             PORTB = 0b00100000;
   535  04F  0C20               	movlw	32
   536  050  0026               	movwf	6	;volatile
   537                           
   538                           ;main.c: 55:             break;
   539  051  0A84               	goto	l36
   540  052                     l781:	
   541                           
   542                           ;main.c: 57:             PORTC = 0b00111111;
   543  052  0C3F               	movlw	63
   544  053  0027               	movwf	7	;volatile
   545                           
   546                           ;main.c: 58:             PORTB = 0b00100000;
   547  054  0C20               	movlw	32
   548  055  0026               	movwf	6	;volatile
   549                           
   550                           ;main.c: 59:             break;
   551  056  0A84               	goto	l36
   552  057                     l783:	
   553                           
   554                           ;main.c: 61:             PORTC = 0b00110111;
   555  057  0C37               	movlw	55
   556  058  0027               	movwf	7	;volatile
   557                           
   558                           ;main.c: 62:             PORTB = 0b00100000;
   559  059  0C20               	movlw	32
   560  05A  0026               	movwf	6	;volatile
   561                           
   562                           ;main.c: 63:             break;
   563  05B  0A84               	goto	l36
   564  05C                     l787:	
   565  05C  0210               	movf	b_to_bcd@x,w
   566  05D  002D               	movwf	btemp
   567  05E  006E               	clrf	btemp+1
   568                           
   569                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   570                           ; Switch size 1, requested type "simple"
   571                           ; Number of cases is 1, Range of values is 0 to 0
   572                           ; switch strategies available:
   573                           ; Name         Instructions Cycles
   574                           ; simple_byte            4     3 (average)
   575                           ;	Chosen strategy is simple_byte
   576  05F  020E               	movf	wtemp0+1,w
   577  060  0F00               	xorlw	0	; case 0
   578  061  0643               	skipnz
   579  062  0A64               	goto	l949
   580  063  0A2D               	goto	l761
   581  064                     l949:	
   582                           
   583                           ; Switch size 1, requested type "simple"
   584                           ; Number of cases is 10, Range of values is 0 to 9
   585                           ; switch strategies available:
   586                           ; Name         Instructions Cycles
   587                           ; simple_byte           31    16 (average)
   588                           ;	Chosen strategy is simple_byte
   589  064  020D               	movf	wtemp0,w
   590  065  0F00               	xorlw	0	; case 0
   591  066  0643               	skipnz
   592  067  0A2D               	goto	l761
   593  068  0F01               	xorlw	1	; case 1
   594  069  0643               	skipnz
   595  06A  0A32               	goto	l763
   596  06B  0F03               	xorlw	3	; case 2
   597  06C  0643               	skipnz
   598  06D  0A36               	goto	l767
   599  06E  0F01               	xorlw	1	; case 3
   600  06F  0643               	skipnz
   601  070  0A3B               	goto	l769
   602  071  0F07               	xorlw	7	; case 4
   603  072  0643               	skipnz
   604  073  0A40               	goto	l771
   605  074  0F01               	xorlw	1	; case 5
   606  075  0643               	skipnz
   607  076  0A43               	goto	l775
   608  077  0F03               	xorlw	3	; case 6
   609  078  0643               	skipnz
   610  079  0A48               	goto	l777
   611  07A  0F01               	xorlw	1	; case 7
   612  07B  0643               	skipnz
   613  07C  0A4D               	goto	l779
   614  07D  0F0F               	xorlw	15	; case 8
   615  07E  0643               	skipnz
   616  07F  0A52               	goto	l781
   617  080  0F01               	xorlw	1	; case 9
   618  081  0643               	skipnz
   619  082  0A57               	goto	l783
   620  083  0A2D               	goto	l761
   621  084                     l36:	
   622  084  0800               	retlw	0
   623  085                     __end_of_b_to_bcd:	
   624                           
   625                           	psect	jmp_tab
   626  005                     __pjmp_tab:	
   627                           ;incstack = 0
   628                           ; Regs used in _b_to_bcd: [wreg-fsr0h+status,2-btemp+1]
   629                           
   630  005                     entry__b_to_bcd:	
   631  005  04A3  0A29         	ljmp	_b_to_bcd
   632  007                     entry____wmul:	
   633                           ;incstack = 0
   634                           ; Regs used in ___wmul: [wreg-fsr0h+status,2-btemp+1]
   635                           
   636  007  05A3  0BD4         	ljmp	___wmul
   637  009                     entry____awmod:	
   638                           ;incstack = 0
   639                           ; Regs used in ___awmod: [wreg-fsr0h+status,2-btemp+2]
   640                           
   641  009  04A3  0A85         	ljmp	___awmod
   642  00B                     entry____awdiv:	
   643                           ;incstack = 0
   644                           ; Regs used in ___awdiv: [wreg-fsr0h+status,2-btemp+2]
   645                           
   646  00B  04A3  0AF3         	ljmp	___awdiv
   647                           
   648                           	psect	text2
   649  3D4                     __ptext2:	
   650 ;; *************** function ___wmul *****************
   651 ;; Defined at:
   652 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  multiplier      2    0[BANK0 ] unsigned int 
   655 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;  product         2    4[BANK0 ] unsigned int 
   658 ;; Return value:  Size  Location     Type
   659 ;;                  2    0[BANK0 ] unsigned int 
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   667 ;;      Params:         4       0       0       0       0
   668 ;;      Locals:         2       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         6       0       0       0       0
   671 ;;Total ram usage:        6 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function ___wmul
   682  3D4                     ___wmul:	
   683  3D4                     l795:	
   684  3D4  04A4               	bcf	4,5	;FSR5=0, select bank0
   685  3D5  04C4               	bcf	4,6	;FSR6=0, select bank0
   686  3D6  0074               	clrf	___wmul@product
   687  3D7  0075               	clrf	___wmul@product+1
   688  3D8                     l797:	
   689  3D8  0710               	btfss	___wmul@multiplier,0
   690  3D9  0BDB               	goto	u261
   691  3DA  0BDC               	goto	u260
   692  3DB                     u261:	
   693  3DB  0BE6               	goto	l801
   694  3DC                     u260:	
   695  3DC                     l799:	
   696  3DC  0213               	movf	___wmul@multiplicand+1,w
   697  3DD  002E               	movwf	btemp+1
   698  3DE  0212               	movf	___wmul@multiplicand,w
   699  3DF  002D               	movwf	btemp
   700  3E0  020D               	movf	wtemp0,w
   701  3E1  01F4               	addwf	___wmul@product,f
   702  3E2  0603               	skipnc
   703  3E3  02B5               	incf	___wmul@product+1,f
   704  3E4  020E               	movf	wtemp0+1,w
   705  3E5  01F5               	addwf	___wmul@product+1,f
   706  3E6                     l801:	
   707  3E6  0C01               	movlw	1
   708  3E7  002D               	movwf	btemp
   709  3E8                     u275:	
   710  3E8  0403               	clrc
   711  3E9  0372               	rlf	___wmul@multiplicand,f
   712  3EA  0373               	rlf	___wmul@multiplicand+1,f
   713  3EB  02ED               	decfsz	btemp,f
   714  3EC  0BE8               	goto	u275
   715  3ED                     l803:	
   716  3ED  0C01               	movlw	1
   717  3EE  002D               	movwf	btemp
   718  3EF                     u285:	
   719  3EF  0403               	clrc
   720  3F0  0331               	rrf	___wmul@multiplier+1,f
   721  3F1  0330               	rrf	___wmul@multiplier,f
   722  3F2  02ED               	decfsz	btemp,f
   723  3F3  0BEF               	goto	u285
   724  3F4                     l805:	
   725  3F4  0210               	movf	___wmul@multiplier,w
   726  3F5  0111               	iorwf	___wmul@multiplier+1,w
   727  3F6  0743               	btfss	3,2
   728  3F7  0BF9               	goto	u291
   729  3F8  0BFA               	goto	u290
   730  3F9                     u291:	
   731  3F9  0BD8               	goto	l797
   732  3FA                     u290:	
   733  3FA                     l807:	
   734  3FA  0215               	movf	___wmul@product+1,w
   735  3FB  0031               	movwf	?___wmul+1
   736  3FC  0214               	movf	___wmul@product,w
   737  3FD  0030               	movwf	?___wmul
   738  3FE                     l59:	
   739  3FE  0800               	retlw	0
   740  3FF                     __end_of___wmul:	
   741                           
   742                           	psect	text3
   743  085                     __ptext3:	
   744 ;; *************** function ___awmod *****************
   745 ;; Defined at:
   746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;  divisor         2    0[BANK1 ] int 
   749 ;;  dividend        2    2[BANK1 ] int 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  sign            1   15[BANK0 ] unsigned char 
   752 ;;  counter         1   14[BANK0 ] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  2    0[BANK1 ] int 
   755 ;; Registers used:
   756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   762 ;;      Params:         0       4       0       0       0
   763 ;;      Locals:         2       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         2       4       0       0       0
   766 ;;Total ram usage:        6 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function ___awmod
   777  085                     ___awmod:	
   778  085                     l857:	
   779  085  04A4               	bcf	4,5	;FSR5=0, select bank0
   780  086  04C4               	bcf	4,6	;FSR6=0, select bank0
   781  087  007F               	clrf	___awmod@sign
   782  088                     l859:	
   783  088  05A4               	bsf	4,5	;FSR5=1, select bank1
   784  089  07F3               	btfss	(___awmod@dividend+1)^(0+32),7
   785  08A  0A8C               	goto	u401
   786  08B  0A8D               	goto	u400
   787  08C                     u401:	
   788  08C  0A95               	goto	l865
   789  08D                     u400:	
   790  08D                     l861:	
   791  08D  0272               	comf	___awmod@dividend^(0+32),f
   792  08E  0273               	comf	(___awmod@dividend+1)^(0+32),f
   793  08F  02B2               	incf	___awmod@dividend^(0+32),f
   794  090  0643               	skipnz
   795  091  02B3               	incf	(___awmod@dividend+1)^(0+32),f
   796  092                     l863:	
   797  092  04A4               	bcf	4,5	;FSR5=0, select bank0
   798  093  007F               	clrf	___awmod@sign
   799  094  02BF               	incf	___awmod@sign,f
   800  095                     l865:	
   801  095  05A4               	bsf	4,5	;FSR5=1, select bank1
   802  096  07F1               	btfss	(___awmod@divisor+1)^(0+32),7
   803  097  0A99               	goto	u411
   804  098  0A9A               	goto	u410
   805  099                     u411:	
   806  099  0A9F               	goto	l869
   807  09A                     u410:	
   808  09A                     l867:	
   809  09A  0270               	comf	___awmod@divisor^(0+32),f
   810  09B  0271               	comf	(___awmod@divisor+1)^(0+32),f
   811  09C  02B0               	incf	___awmod@divisor^(0+32),f
   812  09D  0643               	skipnz
   813  09E  02B1               	incf	(___awmod@divisor+1)^(0+32),f
   814  09F                     l869:	
   815  09F  0210               	movf	___awmod@divisor^(0+32),w
   816  0A0  0111               	iorwf	(___awmod@divisor+1)^(0+32),w
   817  0A1  0643               	btfsc	3,2
   818  0A2  0AA4               	goto	u421
   819  0A3  0AA5               	goto	u420
   820  0A4                     u421:	
   821  0A4  0AE1               	goto	l887
   822  0A5                     u420:	
   823  0A5                     l871:	
   824  0A5  04A4               	bcf	4,5	;FSR5=0, select bank0
   825  0A6  007E               	clrf	___awmod@counter
   826  0A7  02BE               	incf	___awmod@counter,f
   827  0A8  0AB5               	goto	l877
   828  0A9                     l873:	
   829  0A9  0C01               	movlw	1
   830  0AA  002D               	movwf	btemp
   831  0AB                     u435:	
   832  0AB  0403               	clrc
   833  0AC  0370               	rlf	___awmod@divisor^(0+32),f
   834  0AD  0371               	rlf	(___awmod@divisor+1)^(0+32),f
   835  0AE  02ED               	decfsz	btemp,f
   836  0AF  0AAB               	goto	u435
   837  0B0                     l875:	
   838  0B0  0C01               	movlw	1
   839  0B1  002F               	movwf	btemp+2
   840  0B2  020F               	movf	btemp+2,w
   841  0B3  04A4               	bcf	4,5	;FSR5=0, select bank0
   842  0B4  01FE               	addwf	___awmod@counter,f
   843  0B5                     l877:	
   844  0B5  05A4               	bsf	4,5	;FSR5=1, select bank1
   845  0B6  07F1               	btfss	(___awmod@divisor+1)^(0+32),7
   846  0B7  0AB9               	goto	u441
   847  0B8  0ABA               	goto	u440
   848  0B9                     u441:	
   849  0B9  0AA9               	goto	l873
   850  0BA                     u440:	
   851  0BA                     l879:	
   852  0BA  05A4               	bsf	4,5	;FSR5=1, select bank1
   853  0BB  0211               	movf	(___awmod@divisor+1)^(0+32),w
   854  0BC  002E               	movwf	btemp+1
   855  0BD  0210               	movf	___awmod@divisor^(0+32),w
   856  0BE  002D               	movwf	btemp
   857  0BF  020E               	movf	wtemp0+1,w
   858  0C0  0093               	subwf	(___awmod@dividend+1)^(0+32),w
   859  0C1  0743               	skipz
   860  0C2  0AC5               	goto	u455
   861  0C3  020D               	movf	wtemp0,w
   862  0C4  0092               	subwf	___awmod@dividend^(0+32),w
   863  0C5                     u455:	
   864  0C5  0703               	skipc
   865  0C6  0AC8               	goto	u451
   866  0C7  0AC9               	goto	u450
   867  0C8                     u451:	
   868  0C8  0AD3               	goto	l883
   869  0C9                     u450:	
   870  0C9                     l881:	
   871  0C9  0211               	movf	(___awmod@divisor+1)^(0+32),w
   872  0CA  002E               	movwf	btemp+1
   873  0CB  0210               	movf	___awmod@divisor^(0+32),w
   874  0CC  002D               	movwf	btemp
   875  0CD  020D               	movf	wtemp0,w
   876  0CE  00B2               	subwf	___awmod@dividend^(0+32),f
   877  0CF  020E               	movf	wtemp0+1,w
   878  0D0  0703               	skipc
   879  0D1  00F3               	decf	(___awmod@dividend+1)^(0+32),f
   880  0D2  00B3               	subwf	(___awmod@dividend+1)^(0+32),f
   881  0D3                     l883:	
   882  0D3  0C01               	movlw	1
   883  0D4  002D               	movwf	btemp
   884  0D5                     u465:	
   885  0D5  0403               	clrc
   886  0D6  0331               	rrf	(___awmod@divisor+1)^(0+32),f
   887  0D7  0330               	rrf	___awmod@divisor^(0+32),f
   888  0D8  02ED               	decfsz	btemp,f
   889  0D9  0AD5               	goto	u465
   890  0DA                     l885:	
   891  0DA  0C01               	movlw	1
   892  0DB  04A4               	bcf	4,5	;FSR5=0, select bank0
   893  0DC  00BE               	subwf	___awmod@counter,f
   894  0DD  0743               	btfss	3,2
   895  0DE  0AE0               	goto	u471
   896  0DF  0AE1               	goto	u470
   897  0E0                     u471:	
   898  0E0  0ABA               	goto	l879
   899  0E1                     u470:	
   900  0E1                     l887:	
   901  0E1  04A4               	bcf	4,5	;FSR5=0, select bank0
   902  0E2  021F               	movf	___awmod@sign,w
   903  0E3  0643               	btfsc	3,2
   904  0E4  0AE6               	goto	u481
   905  0E5  0AE7               	goto	u480
   906  0E6                     u481:	
   907  0E6  0AED               	goto	l891
   908  0E7                     u480:	
   909  0E7                     l889:	
   910  0E7  05A4               	bsf	4,5	;FSR5=1, select bank1
   911  0E8  0272               	comf	___awmod@dividend^(0+32),f
   912  0E9  0273               	comf	(___awmod@dividend+1)^(0+32),f
   913  0EA  02B2               	incf	___awmod@dividend^(0+32),f
   914  0EB  0643               	skipnz
   915  0EC  02B3               	incf	(___awmod@dividend+1)^(0+32),f
   916  0ED                     l891:	
   917  0ED  05A4               	bsf	4,5	;FSR5=1, select bank1
   918  0EE  0213               	movf	(___awmod@dividend+1)^(0+32),w
   919  0EF  0031               	movwf	(?___awmod+1)^(0+32)
   920  0F0  0212               	movf	___awmod@dividend^(0+32),w
   921  0F1  0030               	movwf	?___awmod^(0+32)
   922  0F2                     l223:	
   923  0F2  0800               	retlw	0
   924  0F3                     __end_of___awmod:	
   925                           
   926                           	psect	text4
   927  0F3                     __ptext4:	
   928 ;; *************** function ___awdiv *****************
   929 ;; Defined at:
   930 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  divisor         2    6[BANK0 ] int 
   933 ;;  dividend        2    8[BANK0 ] int 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  quotient        2   12[BANK0 ] int 
   936 ;;  sign            1   11[BANK0 ] unsigned char 
   937 ;;  counter         1   10[BANK0 ] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2    6[BANK0 ] int 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   947 ;;      Params:         4       0       0       0       0
   948 ;;      Locals:         4       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0
   950 ;;      Totals:         8       0       0       0       0
   951 ;;Total ram usage:        8 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; This function calls:
   954 ;;		Nothing
   955 ;; This function is called by:
   956 ;;		_main
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           
   961                           ;psect for function ___awdiv
   962  0F3                     ___awdiv:	
   963  0F3                     l811:	
   964  0F3  04A4               	bcf	4,5	;FSR5=0, select bank0
   965  0F4  04C4               	bcf	4,6	;FSR6=0, select bank0
   966  0F5  007B               	clrf	___awdiv@sign
   967  0F6                     l813:	
   968  0F6  07F7               	btfss	___awdiv@divisor+1,7
   969  0F7  0AF9               	goto	u301
   970  0F8  0AFA               	goto	u300
   971  0F9                     u301:	
   972  0F9  0B01               	goto	l819
   973  0FA                     u300:	
   974  0FA                     l815:	
   975  0FA  0276               	comf	___awdiv@divisor,f
   976  0FB  0277               	comf	___awdiv@divisor+1,f
   977  0FC  02B6               	incf	___awdiv@divisor,f
   978  0FD  0643               	skipnz
   979  0FE  02B7               	incf	___awdiv@divisor+1,f
   980  0FF                     l817:	
   981  0FF  007B               	clrf	___awdiv@sign
   982  100  02BB               	incf	___awdiv@sign,f
   983  101                     l819:	
   984  101  07F9               	btfss	___awdiv@dividend+1,7
   985  102  0B04               	goto	u311
   986  103  0B05               	goto	u310
   987  104                     u311:	
   988  104  0B0E               	goto	l825
   989  105                     u310:	
   990  105                     l821:	
   991  105  0278               	comf	___awdiv@dividend,f
   992  106  0279               	comf	___awdiv@dividend+1,f
   993  107  02B8               	incf	___awdiv@dividend,f
   994  108  0643               	skipnz
   995  109  02B9               	incf	___awdiv@dividend+1,f
   996  10A                     l823:	
   997  10A  0C01               	movlw	1
   998  10B  002F               	movwf	btemp+2
   999  10C  020F               	movf	btemp+2,w
  1000  10D  01BB               	xorwf	___awdiv@sign,f
  1001  10E                     l825:	
  1002  10E  007C               	clrf	___awdiv@quotient
  1003  10F  007D               	clrf	___awdiv@quotient+1
  1004  110                     l827:	
  1005  110  0216               	movf	___awdiv@divisor,w
  1006  111  0117               	iorwf	___awdiv@divisor+1,w
  1007  112  0643               	btfsc	3,2
  1008  113  0B15               	goto	u321
  1009  114  0B16               	goto	u320
  1010  115                     u321:	
  1011  115  0B55               	goto	l849
  1012  116                     u320:	
  1013  116                     l829:	
  1014  116  007A               	clrf	___awdiv@counter
  1015  117  02BA               	incf	___awdiv@counter,f
  1016  118  0B24               	goto	l835
  1017  119                     l831:	
  1018  119  0C01               	movlw	1
  1019  11A  002D               	movwf	btemp
  1020  11B                     u335:	
  1021  11B  0403               	clrc
  1022  11C  0376               	rlf	___awdiv@divisor,f
  1023  11D  0377               	rlf	___awdiv@divisor+1,f
  1024  11E  02ED               	decfsz	btemp,f
  1025  11F  0B1B               	goto	u335
  1026  120                     l833:	
  1027  120  0C01               	movlw	1
  1028  121  002F               	movwf	btemp+2
  1029  122  020F               	movf	btemp+2,w
  1030  123  01FA               	addwf	___awdiv@counter,f
  1031  124                     l835:	
  1032  124  07F7               	btfss	___awdiv@divisor+1,7
  1033  125  0B27               	goto	u341
  1034  126  0B28               	goto	u340
  1035  127                     u341:	
  1036  127  0B19               	goto	l831
  1037  128                     u340:	
  1038  128                     l837:	
  1039  128  0C01               	movlw	1
  1040  129  002D               	movwf	btemp
  1041  12A                     u355:	
  1042  12A  0403               	clrc
  1043  12B  037C               	rlf	___awdiv@quotient,f
  1044  12C  037D               	rlf	___awdiv@quotient+1,f
  1045  12D  02ED               	decfsz	btemp,f
  1046  12E  0B2A               	goto	u355
  1047  12F                     l839:	
  1048  12F  0217               	movf	___awdiv@divisor+1,w
  1049  130  002E               	movwf	btemp+1
  1050  131  0216               	movf	___awdiv@divisor,w
  1051  132  002D               	movwf	btemp
  1052  133  020E               	movf	wtemp0+1,w
  1053  134  0099               	subwf	___awdiv@dividend+1,w
  1054  135  0743               	skipz
  1055  136  0B39               	goto	u365
  1056  137  020D               	movf	wtemp0,w
  1057  138  0098               	subwf	___awdiv@dividend,w
  1058  139                     u365:	
  1059  139  0703               	skipc
  1060  13A  0B3C               	goto	u361
  1061  13B  0B3D               	goto	u360
  1062  13C                     u361:	
  1063  13C  0B48               	goto	l845
  1064  13D                     u360:	
  1065  13D                     l841:	
  1066  13D  0217               	movf	___awdiv@divisor+1,w
  1067  13E  002E               	movwf	btemp+1
  1068  13F  0216               	movf	___awdiv@divisor,w
  1069  140  002D               	movwf	btemp
  1070  141  020D               	movf	wtemp0,w
  1071  142  00B8               	subwf	___awdiv@dividend,f
  1072  143  020E               	movf	wtemp0+1,w
  1073  144  0703               	skipc
  1074  145  00F9               	decf	___awdiv@dividend+1,f
  1075  146  00B9               	subwf	___awdiv@dividend+1,f
  1076  147                     l843:	
  1077  147  051C               	bsf	___awdiv@quotient,0
  1078  148                     l845:	
  1079  148  0C01               	movlw	1
  1080  149  002D               	movwf	btemp
  1081  14A                     u375:	
  1082  14A  0403               	clrc
  1083  14B  0337               	rrf	___awdiv@divisor+1,f
  1084  14C  0336               	rrf	___awdiv@divisor,f
  1085  14D  02ED               	decfsz	btemp,f
  1086  14E  0B4A               	goto	u375
  1087  14F                     l847:	
  1088  14F  0C01               	movlw	1
  1089  150  00BA               	subwf	___awdiv@counter,f
  1090  151  0743               	btfss	3,2
  1091  152  0B54               	goto	u381
  1092  153  0B55               	goto	u380
  1093  154                     u381:	
  1094  154  0B28               	goto	l837
  1095  155                     u380:	
  1096  155                     l849:	
  1097  155  021B               	movf	___awdiv@sign,w
  1098  156  0643               	btfsc	3,2
  1099  157  0B59               	goto	u391
  1100  158  0B5A               	goto	u390
  1101  159                     u391:	
  1102  159  0B5F               	goto	l853
  1103  15A                     u390:	
  1104  15A                     l851:	
  1105  15A  027C               	comf	___awdiv@quotient,f
  1106  15B  027D               	comf	___awdiv@quotient+1,f
  1107  15C  02BC               	incf	___awdiv@quotient,f
  1108  15D  0643               	skipnz
  1109  15E  02BD               	incf	___awdiv@quotient+1,f
  1110  15F                     l853:	
  1111  15F  021D               	movf	___awdiv@quotient+1,w
  1112  160  0037               	movwf	?___awdiv+1
  1113  161  021C               	movf	___awdiv@quotient,w
  1114  162  0036               	movwf	?___awdiv
  1115  163                     l210:	
  1116  163  0800               	retlw	0
  1117  164                     __end_of___awdiv:	
  1118  000D                     btemp	set	13	;btemp
  1119  000D                     wtemp0	set	13
  1120  000D                     ttemp0	set	13


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    BANK0            16     16      16
    BANK1            16      8       8
    BANK3            16      0       0
    BANK2            16      0       0
    COMMON            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in BANK0

    _main->___awmod
    ___awmod->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK1

    _main->___awmod

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in COMMON

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1823
                                              4 BANK1      4     4      0
                            ___awdiv
                            ___awmod
                             ___wmul
                           _b_to_bcd
 ---------------------------------------------------------------------------------
 (1) _b_to_bcd                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                             14 BANK0      2     2      0
                                              0 BANK1      4     0      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___awmod
     ___awdiv (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   ___wmul
   _b_to_bcd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
ABS                  0      0       0       1        0.0%
BITBANK0            10      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BANK0               10     10      10       3      100.0%
BITBANK1            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               10      8       8       5       50.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0       0       6        0.0%
BITBANK3            10      0       0       7        0.0%
BANK3               10      0       0       8        0.0%
BITBANK2            10      0       0       9        0.0%
BANK2               10      0       0      10        0.0%
BITCOMMON            0      0       0      11        0.0%
COMMON               0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 30 04:31:43 2019

            __CFG_CP$OFF 0000                       l36 0084                       l59 03FE  
           ___awdiv@sign 001B                       fsr 0004      ___wmul@multiplicand 0012  
                    l210 0163                      l223 00F2                      l801 03E6  
                    l811 00F3                      l803 03ED                      l821 0105  
                    l813 00F6                      l805 03F4                      l901 016E  
                    l831 0119                      l823 010A                      l815 00FA  
                    l807 03FA                      l911 0174                      l903 016F  
                    l841 013D                      l833 0120                      l825 010E  
                    l817 00FF                      l761 002D                      l913 0174  
                    l905 0171                      l851 015A                      l843 0147  
                    l835 0124                      l827 0110                      l819 0101  
                    l771 0040                      l763 0032                      l915 0177  
                    l907 0172                      l853 015F                      l845 0148  
                    l837 0128                      l829 0116                      l861 008D  
                    l781 0052                      l765 0034                      l917 017B  
                    l909 0174                      l847 014F                      l839 012F  
                    l871 00A5                      l863 0092                      l783 0057  
                    l775 0043                      l767 0036                      l759 002C  
                    l849 0155                      l881 00C9                      l873 00A9  
                    l865 0095                      l857 0085                      l777 0048  
                    l769 003B                      l891 00ED                      l883 00D3  
                    l875 00B0                      l867 009A                      l859 0088  
                    l795 03D4                      l779 004D                      l787 005C  
                    l885 00DA                      l877 00B5                      l869 009F  
                    l797 03D8                      l949 0064                      l879 00BA  
                    l887 00E1                      l799 03DC                      l895 0164  
                    l889 00E7                      l897 016A                      l899 016C  
                    u300 00FA                      u301 00F9                      u310 0105  
                    u311 0104                      u320 0116                      u400 008D  
                    u321 0115                      u401 008C                      u410 009A  
                    u411 0099                      u340 0128                      u420 00A5  
                    u260 03DC                      u341 0127                      u421 00A4  
                    u261 03DB                      u335 011B                      u360 013D  
                    u440 00BA                      u361 013C                      u441 00B9  
                    u450 00C9                      u290 03FA                      u355 012A  
                    u451 00C8                      u435 00AB                      u291 03F9  
                    u275 03E8                      u380 0155                      u381 0154  
                    u365 0139                      u285 03EF                      u390 015A  
                    u470 00E1                      u391 0159                      u375 014A  
                    u471 00E0                      u455 00C5                      u480 00E7  
                    u481 00E6                      u465 00D5                      u490 017B  
                    u491 017A             ___awmod@sign 001F            __CFG_CPDF$OFF 0000  
                   _main 0164                     btemp 000D                     start 0000  
                  ?_main 0010          __end_of___awdiv 0164                    _ADRES 000A  
          __CFG_WDTE$OFF 0000          __end_of___awmod 00F3          ___awdiv@divisor 0016  
        ___awdiv@counter 001A                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0006                    _TRISC 0007                    ttemp0 000D  
                  status 0003                    wtemp0 000D           __CFG_MCLRE$OFF 0000  
        __initialization 0002             __end_of_main 0200                   ??_main 0020  
                 _ADCON0 0009         ___awdiv@dividend 0018                   _OPTION 0000  
       __end_of_b_to_bcd 0085                   ___wmul 03D4                ??___awdiv 001A  
              ??___awmod 001E         ___awdiv@quotient 001C          ___awmod@divisor 0030  
        ___awmod@counter 001E  __end_of__initialization 0002               __pmaintext 0164  
                ?___wmul 0010                  _CM1CON0 0008                  _CM2CON0 000B  
              ?_b_to_bcd 0010                  ___awdiv 00F3                  ___awmod 0085  
        __size_of___wmul 002B             entry____wmul 0007                  __ptext1 0029  
                __ptext2 03D4                  __ptext3 0085                  __ptext4 00F3  
             ??_b_to_bcd 0010         ___awmod@dividend 0032     end_of_initialization 0002  
         __end_of___wmul 03FF      start_initialization 0002         __CFG_IOSCFS$4MHz 0000  
               ??___wmul 0014                ___latbits 0001            __pcstackBANK0 0010  
          __pcstackBANK1 0030        __size_of_b_to_bcd 005C           entry__b_to_bcd 0005  
              __pjmp_tab 0005                 ?___awdiv 0016                 ?___awmod 0030  
              b_to_bcd@x 0010           ___wmul@product 0014               _ADCON0bits 0009  
      ___wmul@multiplier 0010                main@right 0037         __size_of___awdiv 0071  
       __size_of___awmod 006E            entry____awdiv 000B            entry____awmod 0009  
               _b_to_bcd 0029                 _main$491 0035            __size_of_main 009C  
    __CFG_FOSC$INTRC_RB4 0000  
